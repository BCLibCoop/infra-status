#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

compile '/css/*/' do
  # don’t filter or layout
end

compile '/js/*/' do
  # don’t filter or layout
end

compile '/atom' do
  filter :erb
end

compile '*' do
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if item.binary?
    # don’t filter binary items
  elsif ext == 'md' || ext == 'markdown'
    filter :erb
    filter :rdiscount

    if item[:kind] == 'article'
      layout '_post'
      snapshot :single_post
   end

    layout 'default'
  elsif ext == 'haml'
    filter :haml
    layout 'default'
  else
    filter :erb
    layout 'default'
  end
end

route '/css/*/' do
  item.identifier.chop + '.css'
end

route '/js/*/' do
  item.identifier.chop + '.js'
end

route '/atom' do
  item.identifier.chop + '.xml'
end

route '/notices/*' do
  item.identifier.chop + '.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :haml

# vim: et sw=2 ts=2:
